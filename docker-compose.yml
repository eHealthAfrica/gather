version: "2.1"

networks:
  gather_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.3.0/24

volumes:
  gather_database_data: {}
  gather_minio_data: {}

services:

  # ---------------------------------
  # Databases
  # ---------------------------------

  db:
    extends:
      file: ./docker-compose-base.yml
      service: postgres-base
    volumes:
      - gather_database_data:/var/lib/postgresql/data
    networks:
      - gather_net

  minio:
    extends:
      file: ./docker-compose-base.yml
      service: minio-base
    volumes:
      - gather_minio_data:/data
    networks:
      - gather_net

  # ---------------------------------
  # NGINX
  # ---------------------------------

  nginx:
    extends:
      file: ./docker-compose-base.yml
      service: nginx-base
    networks:
      gather_net:
        ipv4_address: 192.168.3.10
    extra_hosts:
      - aether.local:127.0.0.1
      - gather.local:127.0.0.1

  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel:
    extends:
      file: ./docker-compose-base.yml
      service: kernel-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10

  # ---------------------------------
  # Aether ODK module
  # ---------------------------------

  odk:
    extends:
      file: ./docker-compose-base.yml
      service: odk-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      minio:
        condition: service_started
      kernel:
        condition: service_started
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10

  # ---------------------------------
  # Aether UI
  # ---------------------------------

  ui:
    extends:
      file: ./docker-compose-base.yml
      service: ui-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      kernel:
        condition: service_started
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10

  # ---------------------------------
  # Gather Assets
  # ---------------------------------

  gather-assets:
    extends:
      file: ./docker-compose-base.yml
      service: gather-assets-base
    networks:
      - gather_net

  # ---------------------------------
  # Gather
  # ---------------------------------

  gather:
    extends:
      file: ./docker-compose-base.yml
      service: gather-base
    volumes:
      - ./.persistent_data/static/gather:/var/www/static
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      kernel:
        condition: service_started
      odk:
        condition: service_started
      gather-assets:
        condition: service_started
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10

  elasticsearch-consumer:
    image: ehealthafrica/aether-elasticsearch-consumer:2.0.3
    environment:

      # redis
      REDIS_DB: 1
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: passwordpassword

      # local ES/Kibana
      KIBANA_URL: http://kibana:5601/kibana-app
      ELASTICSEARCH_URL: elasticsearch:9200
      ELASTICSEARCH_USER: admin
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}

      # kafka
      KAFKA_URL: ${KAFKA_URL}
      SECURITY.PROTOCOL: ${KAFKA_SECURITY}
      SASL.MECHANISM: PLAIN
      SASL.USERNAME: ${KAFKA_CONSUMER_USER}
      SASL.PASSWORD: ${KAFKA_CONSUMER_PASSWORD}

      # consumer settings
      TENANCY_HEADER: x-oauth-realm
      CONSUMER_NAME: 'CONS'
      ES_CONSUMER_CONFIG_PATH: /code/conf/consumer/consumer.json
      ES_CONSUMER_KAFKA_CONFIG_PATH: /code/conf/consumer/kafka.json
      EXPOSE_PORT: 9099
      # STACKDRIVER_LOGGING: 0
      LOG_LEVEL: "DEBUG"

    command: start
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10
    # this is private to the cluster, only open for debugging
    # ports:
    #   - 9099:9099

  redis:
    image: redis:alpine
    command: >
      redis-server
      --requirepass passwordpassword
      --notify-keyspace-events KEA
      --appendonly yes
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
    networks:
      - gather_net
    extra_hosts:
      - aether.local:192.168.3.10
      - gather.local:192.168.3.10
