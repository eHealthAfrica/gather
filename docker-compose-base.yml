version: "2.4"

services:

  # ---------------------------------
  # Databases
  # ---------------------------------

  postgres-base:
    image: postgres:10-alpine
    environment:
      PGUSER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 3s
      retries: 30

  redis-base:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}

  minio-base:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
    command: minio server --quiet --address minio:9090 /data

  redis-base:
    image: redis:alpine
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --notify-keyspace-events KEA
      --appendonly yes
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb


  # ---------------------------------
  # NGINX
  # ---------------------------------

  nginx-base:
    image: nginx:alpine
    volumes:
      # local setup
      - ./local-setup/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./local-setup/nginx/sites-enabled:/etc/nginx/sites-enabled

      # nginx log files
      - ./.persistent_data/nginx:/var/log/nginx

      # static folders per container
      - ./.persistent_data/static:/static
    ports:
      - 80:80
    healthcheck:
      test: nginx -t
      interval: 5s
      timeout: 3s
      retries: 30


  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel-base:
    image: ehealthafrica/aether-kernel:${AETHER_VERSION:-alpha}
    environment:
      CSRF_COOKIE_DOMAIN: aether.local
      DJANGO_SECRET_KEY: ${KERNEL_DJANGO_SECRET_KEY}

      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      BUCKET_NAME: kernel
      DJANGO_STORAGE_BACKEND: minio
      MINIO_STORAGE_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_STORAGE_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
      MINIO_STORAGE_ENDPOINT: minio:9090
      MINIO_STORAGE_MEDIA_USE_PRESIGNED: null
      MINIO_STORAGE_MEDIA_URL: http://minio:9090/kernel
      MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET: "true"
      MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY: "true"

      APP_NAME: Aether Kernel
      APP_URL: /kernel
      STATIC_URL: /static/kernel/

      MULTITENANCY: ${MULTITENANCY}
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      ADMIN_USERNAME: ${KERNEL_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${KERNEL_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${KERNEL_ADMIN_TOKEN}

      KERNEL_READONLY_DB_USERNAME: ${KERNEL_READONLY_DB_USERNAME}
      KERNEL_READONLY_DB_PASSWORD: ${KERNEL_READONLY_DB_PASSWORD}

      DB_NAME: aether-kernel
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${KERNEL_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      ENABLE_CONNECTION_POOL: "true"
      DB_POOL_INTERNAL: "true"

      DJANGO_USE_CACHE: "true"
      REDIS_DJANGO_CACHE: "true"
      REDIS_SESSION_CACHE: "true"
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      REDIS_DB: 0

      # Export
      EXPORT_CSV_ESCAPE: "\\"
      EXPORT_CSV_QUOTES: "\""
      EXPORT_CSV_SEPARATOR: ","
      EXPORT_DATA_FORMAT: split
      EXPORT_HEADER_CONTENT: labels
      EXPORT_HEADER_SEPARATOR: /
      EXPORT_HEADER_SHORTEN: "no"

      WEB_SERVER_PORT: 8100
    volumes:
      - ./.persistent_data/backups/kernel:/backups
      - ./.persistent_data/static/kernel:/var/www/static
    command: start


  # ---------------------------------
  # Entity Extractor
  # ---------------------------------

  exm-base:
    image: ehealthafrica/aether-exm:${AETHER_VERSION:-alpha}
    environment:
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      # use internal url, this happens behind the curtains
      AETHER_KERNEL_URL: http://aether.local/kernel
      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}

      REDIS_DB: 0
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
    command: start

  # ---------------------------------
  # Aether ODK module
  # ---------------------------------

  odk-base:
    image: ehealthafrica/aether-odk:${AETHER_VERSION:-alpha}
    environment:
      CSRF_COOKIE_DOMAIN: aether.local
      DJANGO_SECRET_KEY: ${ODK_DJANGO_SECRET_KEY}

      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      BUCKET_NAME: odk
      DJANGO_STORAGE_BACKEND: minio
      MINIO_STORAGE_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_STORAGE_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
      MINIO_STORAGE_ENDPOINT: minio:9090
      MINIO_STORAGE_MEDIA_USE_PRESIGNED: null
      MINIO_STORAGE_MEDIA_URL: http://minio:9090/odk
      MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET: "true"
      MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY: "true"

      APP_NAME: Aether ODK
      APP_URL: /odk
      STATIC_URL: /static/odk/

      MULTITENANCY: ${MULTITENANCY}
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      ADMIN_USERNAME: ${ODK_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ODK_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${ODK_ADMIN_TOKEN}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://aether.local/kernel

      DB_NAME: aether-odk
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${ODK_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      ENABLE_CONNECTION_POOL: "true"
      DB_POOL_INTERNAL: "true"

      DJANGO_USE_CACHE: "true"
      REDIS_DJANGO_CACHE: "true"
      REDIS_SESSION_CACHE: "true"
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      REDIS_DB: 4

      WEB_SERVER_PORT: 8102
    volumes:
      - ./.persistent_data/backups/odk:/backups
      - ./.persistent_data/static/odk:/var/www/static
    command: start


  # ---------------------------------
  # Aether UI
  # ---------------------------------

  ui-base:
    image: ehealthafrica/aether-ui:${AETHER_VERSION:-alpha}
    environment:
      CSRF_COOKIE_DOMAIN: aether.local
      DJANGO_SECRET_KEY: ${UI_DJANGO_SECRET_KEY}

      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      APP_NAME: Aether
      STATIC_URL: /static/ui/

      MULTITENANCY: ${MULTITENANCY}
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      ADMIN_USERNAME: ${UI_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${UI_ADMIN_PASSWORD}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://aether.local/kernel

      DB_NAME: aether-ui
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${UI_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      ENABLE_CONNECTION_POOL: "true"
      DB_POOL_INTERNAL: "true"

      DJANGO_USE_CACHE: "true"
      REDIS_DJANGO_CACHE: "true"
      REDIS_SESSION_CACHE: "true"
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      REDIS_DB: 8

      WEB_SERVER_PORT: 8104
    volumes:
      - ./.persistent_data/backups/ui:/backups
      - ./.persistent_data/static/ui:/var/www/static
    command: start


  # ---------------------------------
  # Gather
  # ---------------------------------

  gather-base:
    image: gather
    build: .
    stdin_open: true
    tty: true
    environment:
      CSRF_COOKIE_DOMAIN: gather.local
      DJANGO_SECRET_KEY: ${GATHER_DJANGO_SECRET_KEY}

      LOGGING_FORMATTER: verbose
      HTML_SELECT_CUTOFF: 10
      PROFILING_ENABLED: "true"

      APP_NAME: Gather

      MULTITENANCY: ${MULTITENANCY}
      DEFAULT_REALM: ${DEFAULT_REALM}
      REALM_COOKIE: ${REALM_COOKIE}

      ADMIN_USERNAME: ${GATHER_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${GATHER_ADMIN_PASSWORD}

      EXTERNAL_APPS: aether-kernel,aether-odk

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://aether.local/kernel

      AETHER_ODK_TOKEN: ${ODK_ADMIN_TOKEN}
      AETHER_ODK_URL: http://aether.local/odk

      DB_NAME: gather
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${GATHER_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      ENABLE_CONNECTION_POOL: "true"
      DB_POOL_INTERNAL: "true"

      DJANGO_USE_CACHE: "true"
      REDIS_DJANGO_CACHE: "true"
      REDIS_SESSION_CACHE: "true"
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379
      REDIS_DB: 12

      CONSUMERS_CONFIG_FILE: '/code/conf/consumers.json'
      AUTO_CONFIG_CONSUMERS: "true"
      TENANCY_HEADER: 'X-Oauth-realm'

      # With offline export no restrictions
      EXPORT_MAX_ROWS_SIZE: 0

      WEB_SERVER_PORT: 8105

      # Use this value with "HMR" otherwise you can comment it out
      WEBPACK_STATS_FILE: /code/gather/assets/bundles/webpack-stats.json
    volumes:
      - ./app:/code
    command: start_dev

  # ---------------------------------
  # Gather Assets
  # ---------------------------------

  gather-assets-base:
    image: gather-assets
    build: ./app/gather/assets
    stdin_open: true
    tty: true
    volumes:
      - ./app/gather/assets:/code/assets
    command: start_dev
