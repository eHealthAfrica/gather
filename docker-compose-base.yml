version: "2.1"

services:

  # ---------------------------------
  # Databases
  # ---------------------------------

  postgres-base:
    image: postgres:9.6-alpine
    environment:
      PGUSER: postgres
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 3s
      retries: 30

  couchdb-base:
    image: couchdb:2.3
    environment:
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    volumes:
      - ./local-setup/couchdb/config.ini:/usr/local/etc/couchdb/local.ini
    ports:
      - "5984:5984"

  redis-base:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}

  minio-base:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
    command: minio server --quiet --address minio:9000 /data
    ports:
      - "9000:9000"


  # ---------------------------------
  # NGINX
  # ---------------------------------

  nginx-base:
    image: nginx:alpine
    volumes:
      # local setup
      - ./local-setup/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./local-setup/nginx/sites-enabled:/etc/nginx/sites-enabled

      # static folders per container
      - ./.persistent_data/static:/static
    ports:
      - "80:80"
      - "8443:8443"


  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel-base:
    image: ehealthafrica/aether-kernel:${AETHER_VERSION:-latest}
    environment:
      CSRF_COOKIE_DOMAIN: .aether.local
      DJANGO_SECRET_KEY: ${KERNEL_DJANGO_SECRET_KEY}

      # Uncomment this line to enable single sign on if you use CAS
      # CAS_SERVER_URL: https://your.cas.server
      # HOSTNAME: kernel.aether.local

      BUCKET_NAME: kernel
      DJANGO_STORAGE_BACKEND: minio
      MINIO_STORAGE_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_STORAGE_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
      MINIO_STORAGE_ENDPOINT: minio:9000
      # Use these settings to make it accessible via browser
      MINIO_STORAGE_MEDIA_USE_PRESIGNED: null
      MINIO_STORAGE_MEDIA_URL: http://localhost:9000/kernel
      MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET: "true"
      MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY: "true"

      APP_NAME: Aether Kernel

      ADMIN_USERNAME: ${KERNEL_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${KERNEL_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${KERNEL_ADMIN_TOKEN}

      KERNEL_READONLY_DB_USERNAME: ${KERNEL_READONLY_DB_USERNAME}
      KERNEL_READONLY_DB_PASSWORD: ${KERNEL_READONLY_DB_PASSWORD}

      DB_NAME: aether-kernel
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${KERNEL_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      # Export
      EXPORT_CSV_ESCAPE: "\\"
      EXPORT_CSV_QUOTES: "\""
      EXPORT_CSV_SEPARATOR: ","
      EXPORT_DATA_FORMAT: "split"
      EXPORT_HEADER_CONTENT: "labels"
      EXPORT_HEADER_SEPARATOR: "/"
      EXPORT_HEADER_SHORTEN: "no"

      WEB_SERVER_PORT: 8100
    volumes:
      - ./.persistent_data/backups/kernel:/backups
      - ./.persistent_data/static/kernel:/var/www/static
    ports:
      - "8100:8100"
    command: start


  # ---------------------------------
  # Aether ODK module
  # ---------------------------------

  odk-base:
    image: ehealthafrica/aether-odk:${AETHER_VERSION:-latest}
    environment:
      CSRF_COOKIE_DOMAIN: .aether.local
      DJANGO_SECRET_KEY: ${ODK_DJANGO_SECRET_KEY}

      # Uncomment this line to enable single sign on if you use CAS
      # CAS_SERVER_URL: https://your.cas.server
      # HOSTNAME: odk.aether.local

      BUCKET_NAME: odk
      DJANGO_STORAGE_BACKEND: minio
      MINIO_STORAGE_ACCESS_KEY: ${MINIO_STORAGE_ACCESS_KEY}
      MINIO_STORAGE_SECRET_KEY: ${MINIO_STORAGE_SECRET_KEY}
      MINIO_STORAGE_ENDPOINT: minio:9000
      # Use these settings to make it accessible via browser
      MINIO_STORAGE_MEDIA_USE_PRESIGNED: null
      MINIO_STORAGE_MEDIA_URL: http://localhost:9000/odk
      MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET: "true"
      MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY: "true"

      APP_NAME: Aether ODK

      ADMIN_USERNAME: ${ODK_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ODK_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${ODK_ADMIN_TOKEN}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://kernel:8100
      AETHER_KERNEL_URL_TEST: http://kernel-test:9100

      DB_NAME: aether-odk
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${ODK_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      # behind ngnix
      WEB_SERVER_PORT: 8102
      # standalone (without nginx) (ODK Collect only accepts 443 and 8443 ports)
      # WEB_SERVER_PORT: 8443
    volumes:
      - ./.persistent_data/backups/odk:/backups
      - ./.persistent_data/static/odk:/var/www/static
    ports:
      # behind ngnix
      - "8102:8102"
      # standalone (without nginx)
      # - "8443:8443"
    command: start


  # ---------------------------------
  # Aether CouchDB Sync module
  # ---------------------------------

  couchdb-sync-base:
    image: ehealthafrica/aether-couchdb-sync:${AETHER_VERSION:-latest}
    environment: &sync-environment
      CSRF_COOKIE_DOMAIN: .aether.local
      DJANGO_SECRET_KEY: ${COUCHDB_SYNC_DJANGO_SECRET_KEY}

      # Uncomment this line to enable single sign on if you use CAS
      # CAS_SERVER_URL: https://your.cas.server
      # HOSTNAME: sync.aether.local

      APP_NAME: Aether CouchDB-Sync

      ADMIN_USERNAME: ${COUCHDB_SYNC_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${COUCHDB_SYNC_ADMIN_PASSWORD}
      ADMIN_TOKEN: ${COUCHDB_SYNC_ADMIN_TOKEN}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://kernel:8100
      AETHER_KERNEL_URL_TEST: http://kernel-test:9100

      GOOGLE_CLIENT_ID: ${COUCHDB_SYNC_GOOGLE_CLIENT_ID}

      COUCHDB_URL: http://couchdb:5984
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}

      DB_NAME: aether-couchdb-sync
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${COUCHDB_SYNC_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      REDIS_DB: 0
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: 6379

      WEB_SERVER_PORT: 8106
    volumes:
      - ./.persistent_data/backups/sync:/backups
      - ./.persistent_data/static/sync:/var/www/static
    ports:
      - "8106:8106"
    command: start

  couchdb-sync-rq-base:
    image: ehealthafrica/aether-couchdb-sync:${AETHER_VERSION:-latest}
    environment: *sync-environment
    command: start_rq


  # ---------------------------------
  # Aether UI
  # ---------------------------------

  ui-base:
    image: ehealthafrica/aether-ui:${AETHER_VERSION:-latest}
    environment:
      CSRF_COOKIE_DOMAIN: .aether.local
      DJANGO_SECRET_KEY: ${UI_DJANGO_SECRET_KEY}

      # Uncomment this line to enable single sign on if you use CAS
      # CAS_SERVER_URL: https://your.cas.server
      # HOSTNAME: ui.aether.local

      APP_NAME: Aether

      ADMIN_USERNAME: ${UI_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${UI_ADMIN_PASSWORD}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://kernel:8100
      AETHER_KERNEL_URL_TEST: http://kernel-test:9100

      DB_NAME: aether-ui
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${UI_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      WEB_SERVER_PORT: 8104
    volumes:
      - ./.persistent_data/backups/ui:/backups
      - ./.persistent_data/static/ui:/var/www/static
    ports:
      - "8104:8104"
    command: start


  # ---------------------------------
  # Gather
  # ---------------------------------

  gather-base:
    image: gather
    build:
      context: .
      dockerfile: app/Dockerfile
    stdin_open: true
    tty: true
    environment:
      CSRF_COOKIE_DOMAIN: gather.local
      DEBUG: "true" # Comment it out with `start` command
      DJANGO_SECRET_KEY: ${GATHER_DJANGO_SECRET_KEY}

      # Uncomment these lines to enable single sign on if you use CAS
      # CAS_SERVER_URL: https://your.cas.server
      # HOSTNAME: gather.local

      ADMIN_USERNAME: ${GATHER_ADMIN_USERNAME}
      ADMIN_PASSWORD: ${GATHER_ADMIN_PASSWORD}

      AETHER_KERNEL_TOKEN: ${KERNEL_ADMIN_TOKEN}
      AETHER_KERNEL_URL: http://kernel:8100
      AETHER_KERNEL_URL_TEST: http://kernel-test:9100

      AETHER_MODULES: "kernel,odk,couchdb-sync"

      AETHER_ODK_TOKEN: ${ODK_ADMIN_TOKEN}
      AETHER_ODK_URL: http://odk:8102
      AETHER_ODK_URL_TEST: http://odk-test:9102

      AETHER_COUCHDB_SYNC_TOKEN: ${COUCHDB_SYNC_ADMIN_TOKEN}
      AETHER_COUCHDB_SYNC_URL: http://couchdb-sync:8106
      AETHER_COUCHDB_SYNC_URL_TEST: http://couchdb-sync-test:9106

      DB_NAME: gather
      PGHOST: db # This matches the DB service name
      PGPASSWORD: ${GATHER_DB_PASSWORD}
      PGPORT: 5432
      PGUSER: postgres

      EXPORT_MAX_ROWS_SIZE: 2500

      WEB_SERVER_PORT: 8105

      # Use this value with "HMR" otherwise you can comment it out
      WEBPACK_STATS_FILE: /code/gather/assets/bundles/webpack-stats.json
    volumes:
      - ./app:/code

      - ./.persistent_data/backups/gather:/backups
      - ./.persistent_data/static/gather:/var/www/static
    ports:
      - "8105:8105"
    command: start_dev

  # ---------------------------------
  # Gather Assets
  # ---------------------------------

  gather-assets-base:
    build: ./app/gather/assets
    stdin_open: true
    tty: true
    volumes:
      #################################################
      #                    WARNING                    #
      # do not include the root folder as volume or   #
      # `node_modules` folder will not be available   #
      #################################################

      # include all folders and root files manually :'(
      - ./app/gather/assets/apps:/code/apps
      - ./app/gather/assets/bundles:/code/bundles
      - ./app/gather/assets/conf:/code/conf
      - ./app/gather/assets/css:/code/css
      - ./app/gather/assets/tests:/code/tests
      - ./app/gather/assets/package.json:/code/package.json
    ports:
      - "3005:3005"
    command: start_dev
