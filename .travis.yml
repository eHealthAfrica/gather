os: linux
dist: jammy
language: shell
services:
  - docker
  - postgresql


# build only the develop or release-#.# branches or tags like #.#.#
# branches:
#   only:
#     - develop
#     - /^release\-[0-9]+\.[0-9]+$/
#     - /^[0-9]+(\.[0-9]+){2}$/


install: true

env:
  global:
    ## Django
    - PGHOST=localhost
    - PGPORT=5432
    - DB_NAME=gather_travis
    - PGUSER=gather_user
    - PGPASSWORD=secretsecret

    - ADMIN_USERNAME=admin-test
    - ADMIN_PASSWORD=password-test

    - DJANGO_SECRET_KEY=django-secret-key-in-test-mode
    - EXPORT_MAX_ROWS_SIZE=1000
    - WEB_SERVER_PORT=9105

    - APP_NAME=Gather
    - MULTITENANCY=yes
    - DEFAULT_REALM=gather
    - REALM_COOKIE=gather-realm

    - EXTERNAL_APPS=aether-kernel,aether-odk
    - AETHER_KERNEL_TOKEN=kernel-test-token
    - AETHER_KERNEL_URL=http://kernel-test
    - AETHER_ODK_TOKEN=odk-test-token
    - AETHER_ODK_URL=http://odk-test

    - AUTO_CONFIG_CONSUMERS='true'
    - CONSUMERS_CONFIG_FILE='./conf/consumers.json'
    - TENANCY_HEADER='X-Oauth-realm'
    - TEST_VARIABLE_1='test variable 1'
    - TEST_VARIABLE_2='test variable 2'

# split jobs and only re-execute the failing one
jobs:
  fast_finish: true
  include:
    - name: Test ReactJS App
      if: type = pull_request
      language: node_js
      node_js: 14
      script: ./scripts/test-node.sh

    - name: Test Django App
      if: type = pull_request
      language: python
      python: '3.10'
      script: ./scripts/test-python.sh

    - name: Test Setup
      if: type = pull_request
      before_script: ./scripts/generate-credentials.sh > .env
      script: docker compose config

    - name: Test concourse deployment
      if: type = pull_request
      stage: test
      # https://www.docker.com/increase-rate-limits
      # https://docs.docker.com/docker-hub/download-rate-limit/#how-do-i-authenticate-pull-requests
      before_script: docker login -u ${DOCKER_HUB_USER} -p ${DOCKER_HUB_PASSWORD}
      script: docker build --pull --file gather.Dockerfile .

    - name: Publish gather container in Docker Hub
      stage: deploy
      script: ./scripts/release.sh
      if: |
        fork IS false AND \
        type != pull_request AND \
        ((branch = develop) OR \
        (branch =~ ^release\-[0-9]+\.[0-9]+$) OR \
        (tag =~ ^[0-9]+(\.[0-9]+){2}$))
